{
	"info": {
		"_postman_id": "54fa8439-de96-4101-b8f3-68be14a8965c",
		"name": "Kuro",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3030/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3030",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user\":{\n\t\t\"username\": \"Test\",\n\t\t\"email\": \"bla@mail.com\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3030/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3030",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3030/api/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3030",
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7670d5d-4a65-4daa-9c23-257a7b34b268",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('productId', product._id);",
									"        tests['Global variable \"productId\" has been set'] = pm.globals.get('productId') === product._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product\": {\n\t\t\"name\": \"Danger-Noodle\",\n\t\t\"description\": \"Dont tread on me\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3030/api/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3030",
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3030/api/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3030",
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4f256b-42e1-4083-940e-5be3efcc553a",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"    ",
									"    tests['\"name\" property has been updated'] = product['name'] === 'Honig';",
									"    tests['\"description\" property has been updated'] = product['description'] === 'Bienenkotze';",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product\": {\n\t\t\"name\": \"Honig\",\n\t\t\"description\": \"Bienenkotze\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3030/api/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3030",
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copy Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3cab6ef-63af-49d6-bab0-4d74b4bb599b",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('productId', product._id);",
									"        tests['Global variable \"productId\" has been set'] = pm.globals.get('productId') === product._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:3030/api/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3030",
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product by ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3030/api/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3030",
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}