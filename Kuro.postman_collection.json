{
	"info": {
		"_postman_id": "accd802a-1166-4c85-a9a5-0107353c9697",
		"name": "Kuro",
		"description": "## The KURO API \n\nThe api builds relationships between `shops`, `products`, `users` and `categories`\n\nWith the current situation in the world (SARS-COV2) \"the corona virus\", we aim to get the state of products in supermarkets. This should show what product is available at what quantity in which supermarket.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/users",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f39fb4be-2b39-4603-8405-f9554aaa3a29",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var user = responseJSON.user || {};",
									"",
									"    tests['Response has \"_id\" property'] = user.hasOwnProperty('_id');",
									"    tests['Response has \"username\" property'] = user.hasOwnProperty('username');",
									"    tests['Response has \"email\" property'] = user.hasOwnProperty('email');",
									"    tests['Response has \"createdAt\" property'] = user.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(user.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = user.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(user.updatedAt);",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('userId', user._id);",
									"        tests['Global variable \"productId\" has been set'] = pm.globals.get('userId') === user._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user\":{\n\t\t\"username\": \"Test{{$randomInt}}\",\n\t\t\"email\": \"bla{{$randomInt}}@mail.com\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://kuro.tlahmann.com/api/users",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var user = responseJSON.user || {};",
									"",
									"    tests['Response has \"_id\" property'] = user.hasOwnProperty('_id');",
									"    tests['Response has \"username\" property'] = user.hasOwnProperty('username');",
									"    tests['Response has \"email\" property'] = user.hasOwnProperty('email');",
									"    tests['Response has \"createdAt\" property'] = user.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(user.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = user.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(user.updatedAt);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/users/{{userId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4f256b-42e1-4083-940e-5be3efcc553a",
								"exec": [
									"if(!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var user = responseJSON.user || {};",
									"",
									"    tests['Response has \"_id\" property'] = user.hasOwnProperty('_id');",
									"    tests['Response has \"username\" property'] = user.hasOwnProperty('username');",
									"    tests['Response has \"email\" property'] = user.hasOwnProperty('email');",
									"    tests['Response has \"createdAt\" property'] = user.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(user.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = user.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(user.updatedAt);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user\": {\n\t\t\"username\": \"Changed{{$randomInt}}\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://kuro.tlahmann.com/api/users/{{userId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/products",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7670d5d-4a65-4daa-9c23-257a7b34b268",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('productId', product._id);",
									"        tests['Global variable \"productId\" has been set'] = pm.globals.get('productId') === product._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product\": {\n\t\t\"name\": \"Beatmungsger√§t\",\n\t\t\"description\": \"Gegen Atemnot\",\n\t\t\"categories\": [\"Luft\"]\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://kuro.tlahmann.com/api/products",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/products/{{productId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4f256b-42e1-4083-940e-5be3efcc553a",
								"exec": [
									"if(!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product\": {\n\t\t\"name\": \"Atemschutzmaste\",\n\t\t\"description\": \"Gegen Tr√∂pfchen√ºbertragung\",\n\t\t\"categories\": [\"Luft\", \"Haushalt\"]\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://kuro.tlahmann.com/api/products/{{productId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copy Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3cab6ef-63af-49d6-bab0-4d74b4bb599b",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('productId', product._id);",
									"        tests['Global variable \"productId\" has been set'] = pm.globals.get('productId') === product._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/products/{{productId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be73f3b0-b1e1-4ecb-9f36-6e8824a061a3",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/products/{{productId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Shops",
			"item": [
				{
					"name": "Get All Shops",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/shops",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"shops"
							],
							"query": [
								{
									"key": "include",
									"value": "address",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Shops with query, Lat, Long, Distance",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/shops?lat=48.3988342&long=9.9919789&distance=500&pageSize=25&page=0&include=address",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"shops"
							],
							"query": [
								{
									"key": "lat",
									"value": "48.3988342"
								},
								{
									"key": "long",
									"value": "9.9919789"
								},
								{
									"key": "distance",
									"value": "500"
								},
								{
									"key": "pageSize",
									"value": "25"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "include",
									"value": "address"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Shop",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7670d5d-4a65-4daa-9c23-257a7b34b268",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var shop = responseJSON.shop || {};",
									"",
									"    tests['Response has \"_id\" property'] = shop.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = shop.hasOwnProperty('name');",
									"    tests['Response has \"location\" property'] = shop.hasOwnProperty('location');",
									"    if (tests['Response has \"location\" property']) {",
									"        tests['Response has \"coordinates\" property'] = shop['location'].hasOwnProperty('coordinates');",
									"        tests['Response \"coordinates\" property is array of length 2'] = Array.isArray(shop['location']['coordinates']) && shop['location']['coordinates'].length === 2;",
									"    }",
									"    ",
									"    tests['Response has \"products\" property'] = shop.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(shop['products']);",
									"    tests['Response has \"createdAt\" property'] = shop.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = shop.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.updatedAt);",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('shopId', shop._id);",
									"        tests['Global variable \"shopId\" has been set'] = pm.globals.get('shopId') === shop._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"shop\": {\n\t\t\"name\": \"REWE City\",\n\t\t\"location\": {\n\t\t\t\"latitude\": \"48.3988342\",\n\t\t\t\"longitude\": \"9.9919789\"\n\t\t},\n\t\t\"stock\": [\n            {\"product\": \"5e8209eb4c47910b7637f4e0\", \"quantity\": 10},\n            {\"product\": \"5e8209eb4c47910b7637f4e1\", \"quantity\": 20}\n        ],\n\t\t\"products\": [\n            \"5e8209eb4c47910b7637f4e0\",\n            \"5e8209eb4c47910b7637f4e1\",\n            \"5e8209eb4c47910b7637f4e2\",\n            \"5e8209eb4c47910b7637f4e3\",\n            \"5e8209eb4c47910b7637f4e4\"\n        ]\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://kuro.tlahmann.com/api/shops",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"shops"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Shop by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var shop = responseJSON.shop || {};",
									"",
									"    tests['Response has \"_id\" property'] = shop.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = shop.hasOwnProperty('name');",
									"    tests['Response has \"latitude\" property'] = shop.hasOwnProperty('latitude');",
									"    tests['Response has \"longitude\" property'] = shop.hasOwnProperty('longitude');",
									"    tests['Response has \"products\" property'] = shop.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(shop['products']);",
									"    tests['Response has \"createdAt\" property'] = shop.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = shop.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.updatedAt);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/shops/{{shopId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"shops",
								"{{shopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Shop by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4f256b-42e1-4083-940e-5be3efcc553a",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var shop = responseJSON.shop || {};",
									"",
									"    tests['Response has \"_id\" property'] = shop.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = shop.hasOwnProperty('name');",
									"    tests['Response has \"latitude\" property'] = shop.hasOwnProperty('latitude');",
									"    tests['Response has \"longitude\" property'] = shop.hasOwnProperty('longitude');",
									"    ",
									"    ",
									"    tests['\"name\" property has been updated'] = shop['name'] === 'Ed & Eka';",
									"    ",
									"    tests['Response has \"products\" property'] = shop.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(shop['products']);",
									"    tests['Response has \"createdAt\" property'] = shop.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = shop.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.updatedAt);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"shop\": {\n\t\t\"stock\": [\n            {\"product\": \"5e8209eb4c47910b7637f4e0\", \"quantity\": 0},\n            {\"product\": \"5e8209eb4c47910b7637f4e1\", \"quantity\": 1}\n        ]\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://kuro.tlahmann.com/api/shops/{{shopId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"shops",
								"{{shopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copy Shop by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3cab6ef-63af-49d6-bab0-4d74b4bb599b",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var shop = responseJSON.shop || {};",
									"",
									"    tests['Response has \"_id\" property'] = shop.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = shop.hasOwnProperty('name');",
									"    tests['Response has \"latitude\" property'] = shop.hasOwnProperty('latitude');",
									"    tests['Response has \"longitude\" property'] = shop.hasOwnProperty('longitude');",
									"    tests['Response has \"products\" property'] = shop.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(shop['products']);",
									"    tests['Response has \"createdAt\" property'] = shop.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = shop.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.updatedAt);",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('shopId', shop._id);",
									"        tests['Global variable \"shopId\" has been set'] = pm.globals.get('shopId') === shop._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/shops/{{shopId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"shops",
								"{{shopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Shop by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c08bb810-624e-4362-ad92-73d77fb72843",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/shops/{{shopId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"shops",
								"{{shopId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Addresses",
			"item": [
				{
					"name": "Get All Addresses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/addresses",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7670d5d-4a65-4daa-9c23-257a7b34b268",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var address = responseJSON.address || {};",
									"",
									"    tests['Response has \"_id\" property'] = address.hasOwnProperty('_id');",
									"    tests['Response has \"address\" property'] = address.hasOwnProperty('address');",
									"    tests['Response has \"address2\" property'] = address.hasOwnProperty('address2');",
									"    tests['Response has \"district\" property'] = address.hasOwnProperty('district');",
									"    tests['Response has \"city\" property'] = address.hasOwnProperty('city');",
									"    tests['Response has \"postralCode\" property'] = address.hasOwnProperty('postralCode');",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('addressId', address._id);",
									"        tests['Global variable \"addressId\" has been set'] = pm.globals.get('addressId') === address._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"address\": {\n\t\t\"address\": \"Herrenkellergasse 18\",\n\t\t\"address2\": null,\n\t\t\"district\": null,\n\t\t\"city\": \"Ulm\",\n\t\t\"postralCode\": \"89073\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://kuro.tlahmann.com/api/addresses",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"addresses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Address by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var shop = responseJSON.shop || {};",
									"",
									"    tests['Response has \"_id\" property'] = shop.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = shop.hasOwnProperty('name');",
									"    tests['Response has \"latitude\" property'] = shop.hasOwnProperty('latitude');",
									"    tests['Response has \"longitude\" property'] = shop.hasOwnProperty('longitude');",
									"    tests['Response has \"products\" property'] = shop.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(shop['products']);",
									"    tests['Response has \"createdAt\" property'] = shop.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = shop.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.updatedAt);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/addresses/{{addressId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"addresses",
								"{{addressId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Address by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4f256b-42e1-4083-940e-5be3efcc553a",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var address = responseJSON.address || {};",
									"",
									"    tests['Response has \"_id\" property'] = address.hasOwnProperty('_id');",
									"    tests['Response has \"address\" property'] = address.hasOwnProperty('address');",
									"    tests['Response has \"address2\" property'] = address.hasOwnProperty('address2');",
									"    tests['Response has \"district\" property'] = address.hasOwnProperty('district');",
									"    tests['Response has \"city\" property'] = address.hasOwnProperty('city');",
									"    tests['Response has \"postralCode\" property'] = address.hasOwnProperty('postralCode');",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"address\": {\n\t\t\"address\": \"Beispielstra√üe 4\",\n\t\t\"address2\": \"1 Obergeschoss\",\n\t\t\"district\": null,\n\t\t\"city\": \"Ulm\",\n\t\t\"postralCode\": \"89074\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://kuro.tlahmann.com/api/addresses/{{addressId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"addresses",
								"{{addressId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copy Address by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3cab6ef-63af-49d6-bab0-4d74b4bb599b",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var address = responseJSON.address || {};",
									"",
									"    tests['Response has \"_id\" property'] = address.hasOwnProperty('_id');",
									"    tests['Response has \"address\" property'] = address.hasOwnProperty('address');",
									"    tests['Response has \"address2\" property'] = address.hasOwnProperty('address2');",
									"    tests['Response has \"district\" property'] = address.hasOwnProperty('district');",
									"    tests['Response has \"city\" property'] = address.hasOwnProperty('city');",
									"    tests['Response has \"postralCode\" property'] = address.hasOwnProperty('postralCode');",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('addressId', address._id);",
									"        tests['Global variable \"addressId\" has been set'] = pm.globals.get('addressId') === address._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/addresses/{{addressId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"addresses",
								"{{addressId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Address by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c08bb810-624e-4362-ad92-73d77fb72843",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://kuro.tlahmann.com/api/addresses/{{addressId}}",
							"protocol": "https",
							"host": [
								"kuro",
								"tlahmann",
								"com"
							],
							"path": [
								"api",
								"addresses",
								"{{addressId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "93a66865-b527-4661-9cef-da90be284fc8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "731f5318-f95f-43cd-a48b-4079381e4776",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}