{
	"info": {
		"_postman_id": "54fa8439-de96-4101-b8f3-68be14a8965c",
		"name": "Kuro",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f39fb4be-2b39-4603-8405-f9554aaa3a29",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var user = responseJSON.user || {};",
									"",
									"    tests['Response has \"_id\" property'] = user.hasOwnProperty('_id');",
									"    tests['Response has \"username\" property'] = user.hasOwnProperty('username');",
									"    tests['Response has \"email\" property'] = user.hasOwnProperty('email');",
									"    tests['Response has \"createdAt\" property'] = user.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(user.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = user.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(user.updatedAt);",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('userId', user._id);",
									"        tests['Global variable \"productId\" has been set'] = pm.globals.get('userId') === user._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user\":{\n\t\t\"username\": \"Test{{$randomInt}}\",\n\t\t\"email\": \"bla{{$randomInt}}@mail.com\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var user = responseJSON.user || {};",
									"",
									"    tests['Response has \"_id\" property'] = user.hasOwnProperty('_id');",
									"    tests['Response has \"username\" property'] = user.hasOwnProperty('username');",
									"    tests['Response has \"email\" property'] = user.hasOwnProperty('email');",
									"    tests['Response has \"createdAt\" property'] = user.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(user.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = user.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(user.updatedAt);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/users/{{userId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4f256b-42e1-4083-940e-5be3efcc553a",
								"exec": [
									"if(!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var user = responseJSON.user || {};",
									"",
									"    tests['Response has \"_id\" property'] = user.hasOwnProperty('_id');",
									"    tests['Response has \"username\" property'] = user.hasOwnProperty('username');",
									"    tests['Response has \"email\" property'] = user.hasOwnProperty('email');",
									"    tests['Response has \"createdAt\" property'] = user.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(user.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = user.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(user.updatedAt);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"user\": {\n\t\t\"username\": \"Changed{{$randomInt}}\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/users/{{userId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7670d5d-4a65-4daa-9c23-257a7b34b268",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('productId', product._id);",
									"        tests['Global variable \"productId\" has been set'] = pm.globals.get('productId') === product._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product\": {\n\t\t\"name\": \"Danger-Noodle\",\n\t\t\"description\": \"Dont tread on me\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4f256b-42e1-4083-940e-5be3efcc553a",
								"exec": [
									"if(!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"    tests['Response has \"quantity\" property'] = product.hasOwnProperty('quantity');",
									"    ",
									"    tests['\"name\" property has been updated'] = product['name'] === 'Honig';",
									"    tests['\"description\" property has been updated'] = product['description'] === 'Bienenkotze';",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product\": {\n\t\t\"name\": \"Honig\",\n\t\t\"description\": \"Bienenkotze\",\n\t\t\"quantity\": 1\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Shops of Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    tests['Response has \"shops\" property'] = responseJSON.hasOwnProperty('shops');",
									"    tests['Response has \"shops\" property is an Array'] = Array.isArray(responseJSON['shops']);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:1337/api/products/{{productId}}/shops",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products",
								"{{productId}}",
								"shops"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Shop by ID to Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    tests['Response has \"shops\" property'] = responseJSON.hasOwnProperty('shops');",
									"    tests['Response has \"shops\" property is an Array'] = Array.isArray(responseJSON['shops']);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:1337/api/products/{{productId}}/shops/{{shopId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products",
								"{{productId}}",
								"shops",
								"{{shopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Shop by ID from Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4f256b-42e1-4083-940e-5be3efcc553a",
								"exec": [
									"if(!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"    tests['Response has \"quantity\" property'] = product.hasOwnProperty('quantity');",
									"    ",
									"    tests['\"name\" property has been updated'] = product['name'] === 'Honig';",
									"    tests['\"description\" property has been updated'] = product['description'] === 'Bienenkotze';",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"shop\": {\n\t\t\"name\": \"Liddl\",\n\t\t\"latitude\": \"1.2345\",\n\t\t\"longitude\": \"9.8765\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/products/{{productId}}/shops/{{shopId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products",
								"{{productId}}",
								"shops",
								"{{shopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Shop by ID from Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    tests['Response has \"shops\" property'] = responseJSON.hasOwnProperty('shops');",
									"    tests['Response has \"shops\" property is an Array'] = Array.isArray(responseJSON['shops']);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/products/{{productId}}/shops/{{shopId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products",
								"{{productId}}",
								"shops",
								"{{shopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Categories of Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    tests['Response has \"categories\" property'] = responseJSON.hasOwnProperty('categories');",
									"    tests['Response has \"categories\" property is an Array'] = Array.isArray(responseJSON['categories']);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:1337/api/products/{{productId}}/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products",
								"{{productId}}",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Category by ID to Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    tests['Response has \"categories\" property'] = responseJSON.hasOwnProperty('categories');",
									"    tests['Response has \"categories\" property is an Array'] = Array.isArray(responseJSON['categories']);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:1337/api/products/{{productId}}/categories/{{categoryId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products",
								"{{productId}}",
								"categories",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Category by ID from Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4f256b-42e1-4083-940e-5be3efcc553a",
								"exec": [
									"if(!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"    tests['Response has \"createdAt\" property'] = product.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(product.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = product.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(product.updatedAt);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"category\": {\n\t\t\"name\": \"Sonstiges\",\n\t\t\"description\": \"Alles andere\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/products/{{productId}}/categories/{{categoryId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products",
								"{{productId}}",
								"categories",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Category by ID from Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    tests['Response has \"categories\" property'] = responseJSON.hasOwnProperty('categories');",
									"    tests['Response has \"categories\" property is an Array'] = Array.isArray(responseJSON['categories']);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/products/{{productId}}/categories/{{categoryId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products",
								"{{productId}}",
								"categories",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copy Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3cab6ef-63af-49d6-bab0-4d74b4bb599b",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('productId', product._id);",
									"        tests['Global variable \"productId\" has been set'] = pm.globals.get('productId') === product._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be73f3b0-b1e1-4ecb-9f36-6e8824a061a3",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Categories",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7670d5d-4a65-4daa-9c23-257a7b34b268",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var category = responseJSON.category || {};",
									"",
									"    tests['Response has \"_id\" property'] = category.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = category.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = category.hasOwnProperty('description');",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('categoryId', category._id);",
									"        tests['Global variable \"categoryId\" has been set'] = pm.globals.get('categoryId') === category._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"category\": {\n\t\t\"name\": \"Milchprodukte\",\n\t\t\"description\": \"Von der Kuh, oder Ziege, oder Schnabeltier\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/categories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Category by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var category = responseJSON.category || {};",
									"",
									"    tests['Response has \"_id\" property'] = category.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = category.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = category.hasOwnProperty('description');",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/categories/{{categoryId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"categories",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Category by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4f256b-42e1-4083-940e-5be3efcc553a",
								"exec": [
									"if(!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var category = responseJSON.category || {};",
									"",
									"    tests['Response has \"_id\" property'] = category.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = category.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = category.hasOwnProperty('description');",
									"    ",
									"    tests['\"name\" property has been updated'] = category['name'] === 'Fisch';",
									"    tests['\"description\" property has been updated'] = category['description'] === 'Die, die schwimmen';",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"category\": {\n\t\t\"name\": \"Fisch\",\n\t\t\"description\": \"Die, die schwimmen\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/categories/{{categoryId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"categories",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Products of Category by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    tests['Response has \"products\" property'] = responseJSON.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(responseJSON['products']);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/categories/{{categoryId}}/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"categories",
								"{{categoryId}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Product by ID to Category by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    tests['Response has \"products\" property'] = responseJSON.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(responseJSON['products']);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:1337/api/categories/{{categoryId}}/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"categories",
								"{{categoryId}}",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product by ID from Category by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4f256b-42e1-4083-940e-5be3efcc553a",
								"exec": [
									"if(!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"    tests['Response has \"quantity\" property'] = product.hasOwnProperty('quantity');",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product\": {\n\t\t\"name\": \"Toilettenpapier\",\n\t\t\"description\": \"Bitte nur eine Packung, Leute\",\n\t\t\"quantity\": 50\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/categories/{{categoryId}}/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"categories",
								"{{categoryId}}",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product by ID from Category by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    tests['Response has \"products\" property'] = responseJSON.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(responseJSON['products']);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/categories/{{categoryId}}/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"categories",
								"{{categoryId}}",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copy Category by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3cab6ef-63af-49d6-bab0-4d74b4bb599b",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var category = responseJSON.category || {};",
									"",
									"    tests['Response has \"_id\" property'] = category.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = category.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = category.hasOwnProperty('description');",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('categoryId', category._id);",
									"        tests['Global variable \"categoryId\" has been set'] = pm.globals.get('categoryId') === category._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/categories/{{categoryId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"categories",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be73f3b0-b1e1-4ecb-9f36-6e8824a061a3",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/categories/{{categoryId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"categories",
								"{{categoryId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Shops",
			"item": [
				{
					"name": "Get All Shops",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/shops",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"shops"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Shop",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7670d5d-4a65-4daa-9c23-257a7b34b268",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var shop = responseJSON.shop || {};",
									"",
									"    tests['Response has \"_id\" property'] = shop.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = shop.hasOwnProperty('name');",
									"    tests['Response has \"latitude\" property'] = shop.hasOwnProperty('latitude');",
									"    tests['Response has \"longitude\" property'] = shop.hasOwnProperty('longitude');",
									"    ",
									"    tests['Response has \"products\" property'] = shop.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(shop['products']);",
									"    tests['Response has \"createdAt\" property'] = shop.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = shop.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.updatedAt);",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('shopId', shop._id);",
									"        tests['Global variable \"shopId\" has been set'] = pm.globals.get('shopId') === shop._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"shop\": {\n\t\t\"name\": \"Norma(nnen)\",\n\t\t\"latitude\": \"14.99123\",\n\t\t\"longitude\": \"89.001\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/shops",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"shops"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Shop by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var shop = responseJSON.shop || {};",
									"",
									"    tests['Response has \"_id\" property'] = shop.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = shop.hasOwnProperty('name');",
									"    tests['Response has \"latitude\" property'] = shop.hasOwnProperty('latitude');",
									"    tests['Response has \"longitude\" property'] = shop.hasOwnProperty('longitude');",
									"    tests['Response has \"products\" property'] = shop.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(shop['products']);",
									"    tests['Response has \"createdAt\" property'] = shop.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = shop.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.updatedAt);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/shops/{{shopId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"shops",
								"{{shopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Products of Shop by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    tests['Response has \"products\" property'] = responseJSON.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(responseJSON['products']);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:1337/api/shops/{{shopId}}/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"shops",
								"{{shopId}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Product by ID to Shop by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    tests['Response has \"products\" property'] = responseJSON.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(responseJSON['products']);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:1337/api/shops/{{shopId}}/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"shops",
								"{{shopId}}",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product by ID from  Shop by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c60ff2f3-9e1e-46c6-9d53-30b27f3f4245",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    tests['Response has \"products\" property'] = responseJSON.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(responseJSON['products']);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/shops/{{shopId}}/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"shops",
								"{{shopId}}",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Shop by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4f256b-42e1-4083-940e-5be3efcc553a",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var shop = responseJSON.shop || {};",
									"",
									"    tests['Response has \"_id\" property'] = shop.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = shop.hasOwnProperty('name');",
									"    tests['Response has \"latitude\" property'] = shop.hasOwnProperty('latitude');",
									"    tests['Response has \"longitude\" property'] = shop.hasOwnProperty('longitude');",
									"    ",
									"    ",
									"    tests['\"name\" property has been updated'] = shop['name'] === 'Ed & Eka';",
									"    tests['\"latitude\" property has been updated'] = shop['latitude'] === 56.8237;",
									"    tests['\"latitude\" property has been updated'] = shop['longitude'] === 44.9211;",
									"    ",
									"    tests['Response has \"products\" property'] = shop.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(shop['products']);",
									"    tests['Response has \"createdAt\" property'] = shop.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = shop.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.updatedAt);",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"shop\": {\n\t\t\"name\": \"Ed & Eka\",\n\t\t\"latitude\": \"56.8237\",\n\t\t\"longitude\": \"44.9211\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/shops/{{shopId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"shops",
								"{{shopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product by ID from Shop by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f4f256b-42e1-4083-940e-5be3efcc553a",
								"exec": [
									"if(!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var product = responseJSON.product || {};",
									"",
									"    tests['Response has \"_id\" property'] = product.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = product.hasOwnProperty('name');",
									"    tests['Response has \"description\" property'] = product.hasOwnProperty('description');",
									"    tests['Response has \"quantity\" property'] = product.hasOwnProperty('quantity');",
									"    ",
									"    tests['\"name\" property has been updated'] = product['name'] === 'Honig';",
									"    tests['\"description\" property has been updated'] = product['description'] === 'Bienenkotze';",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"product\": {\n\t\t\"name\": \"Honig\",\n\t\t\"description\": \"Bienenkotze\",\n\t\t\"quantity\": 1\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:1337/api/shops/{{shopId}}/products/{{productId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"shops",
								"{{shopId}}",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copy Shop by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3cab6ef-63af-49d6-bab0-4d74b4bb599b",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"",
									"if(is200Response){",
									"    var responseJSON = JSON.parse(responseBody);",
									"    var shop = responseJSON.shop || {};",
									"",
									"    tests['Response has \"_id\" property'] = shop.hasOwnProperty('_id');",
									"    tests['Response has \"name\" property'] = shop.hasOwnProperty('name');",
									"    tests['Response has \"latitude\" property'] = shop.hasOwnProperty('latitude');",
									"    tests['Response has \"longitude\" property'] = shop.hasOwnProperty('longitude');",
									"    tests['Response has \"products\" property'] = shop.hasOwnProperty('products');",
									"    tests['Response has \"products\" property is an Array'] = Array.isArray(shop['products']);",
									"    tests['Response has \"createdAt\" property'] = shop.hasOwnProperty('createdAt');",
									"    tests['Response\\'s \"createdAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.createdAt);",
									"    tests['Response has \"updatedAt\" property'] = shop.hasOwnProperty('updatedAt');",
									"    tests['Response\\'s \"updatedAt\" property is an ISO 8601 timestamp'] = /^\\d{4,}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d+.\\d+(?:[+-][0-2]\\d:[0-5]\\d|Z)$/.test(shop.updatedAt);",
									"    ",
									"    if (tests['Response has \"_id\" property']) {",
									"        pm.globals.set('shopId', shop._id);",
									"        tests['Global variable \"shopId\" has been set'] = pm.globals.get('shopId') === shop._id;",
									"    }",
									"}",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/shops/{{shopId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"shops",
								"{{shopId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Shop by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c08bb810-624e-4362-ad92-73d77fb72843",
								"exec": [
									"if (!(environment.isIntegrationTest)) {",
									"var is200Response = responseCode.code === 200;",
									"",
									"tests['Response code is 200 OK'] = is200Response;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:1337/api/shops/{{shopId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "1337",
							"path": [
								"api",
								"shops",
								"{{shopId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}
